# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
# This pipeline builds the .Net Core Windows project, runs unit tests.
name: CBL NetCore Windows PR Validation

# Trigger on every master and release branch push and pull request
on:

  pull_request:
    branches:
      - '**'
    
jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
      #[ubuntu-latest, windows-latest, macos-latest]
        #os: [ windows-2019 ]
      #[x86, x64] Let's do x64 only
        targetplatform: [x64]
        
        dotnet-version: ['3.1.x']

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1 #opt-out of telemetry being sent to Microsoft (default: false)
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
      Cbl_EE_Project_Path: src\Couchbase.Lite.Enterprise\Couchbase.Lite.Enterprise.csproj
      Test_Project_Path: couchbase-lite-net\src\Couchbase.Lite.Tests.NetCore\Couchbase.Lite.Tests.NetCore.Validation.csproj

#### BUILD and TEST

    steps:

    #Checkout CBL Net EE
    - name: Checkout CBL EE
      uses: actions/checkout@v3
      with:
        ref: ${{ github.base_ref }}
        repository: couchbaselabs/couchbase-lite-net-ee
        token: ${{ secrets.GITHUBACTIONS_AT }}
        path: ./
        
    #Checkout LiteCore EE
    - name: Checkout LiteCore EE
      uses: actions/checkout@v3
      with:
        ref: ${{ github.base_ref }}
        repository: couchbase/couchbase-lite-core-EE
        token: ${{ secrets.GITHUBACTIONS_AT }}
        path: ./couchbase-lite-core-EE

    #Checkout CBL Net
    - name: Checkout CBL
      uses: actions/checkout@v2
      with:
        path: ./couchbase-lite-net
        
    #Submodule Update
    - name: Submodule Update
      run: pwsh -command ".\$GITHUB_WORKSPACE\couchbase-lite-net\validations\submodule_update.ps1"

    #Build LiteCore    
    - name: Build LiteCore
      run: pwsh -command ".\$GITHUB_WORKSPACE\couchbase-lite-net\validations\litecore_netcore_build.ps1"
      
    #Setup .NET Core SDK
    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
      
    #Build Test
    - name: Build Test
      run: dotnet build $env:Test_Project_Path --configuration Debug
    
    #Test    
    - name: Run Test
      run: dotnet test $env:Test_Project_Path /p:CollectCoverage=true /p:CoverletOutputFormat=lcov -v n /p:Configuration=Debug